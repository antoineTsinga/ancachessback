"""
Django settings for ancachessback project.

Generated by 'django-admin startproject' using Django 5.0.6.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""
import os
from .base import *
import dj_database_url

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

env = os.environ.get


def get_secret_key_from_file(file_path):
    try:
        with open(file_path) as f:
            return f.read().strip()
    except IOError:
        raise Exception(f"Unable to read the secret key file: {file_path}")


SECRET_KEY = os.environ.get('SECRET_KEY', default='your secret key')

DEBUG = False

# https://docs.djangoproject.com/en/3.0/ref/settings/#allowed-hosts
ALLOWED_HOSTS = ['ancachess.vercel.app', 'ancachess-back.onrender.com']

CSRF_TRUSTED_ORIGINS = ["https://ancachess.vercel.app"]

RENDER_EXTERNAL_HOSTNAME = os.environ.get('RENDER_EXTERNAL_HOSTNAME')
if RENDER_EXTERNAL_HOSTNAME:
    print('RENDER_EXTERNAL_HOSTNAME', RENDER_EXTERNAL_HOSTNAME)
    ALLOWED_HOSTS.append(RENDER_EXTERNAL_HOSTNAME)

# Application definition

CORS_ALLOWED_ORIGINS = ["https://ancachess.vercel.app"]


# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

DATABASES = {

    'default': dj_database_url.config(
            # Replace this value with your local database's connection string.
            default=env('DATABASE_URL'),
            conn_max_age=600
        )
    }

CHANNEL_LAYERS = {
    'default': {
        'BACKEND': 'channels_redis.core.RedisChannelLayer',
        'CONFIG': {
            'hosts': [env('REDIS_URL')],
        },
    },
}

# This production code might break development mode, so we check whether we're in DEBUG mode

# Tell Django to copy static assets into a path called `staticfiles` (this is specific to Render)
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')
# Enable the WhiteNoise storage backend, which compresses static files to reduce disk use
# and renames the files with unique names for each version to support long-term caching
STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'
